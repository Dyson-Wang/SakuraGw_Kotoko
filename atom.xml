<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>樱川琴子的 备忘录</title>
  
  <subtitle>个人记录博客. Contact me: dyson.wang@outlook.com</subtitle>
  <link href="https://dyson-wang.github.io/SakuraGw_Kotoko/atom.xml" rel="self"/>
  
  <link href="https://dyson-wang.github.io/SakuraGw_Kotoko/"/>
  <updated>2024-01-11T06:32:02.000Z</updated>
  <id>https://dyson-wang.github.io/SakuraGw_Kotoko/</id>
  
  <author>
    <name>Dyson Wang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>DNNShifter</title>
    <link href="https://dyson-wang.github.io/SakuraGw_Kotoko/2024/01/11/DNNShifter/"/>
    <id>https://dyson-wang.github.io/SakuraGw_Kotoko/2024/01/11/DNNShifter/</id>
    <published>2024-01-11T06:15:32.000Z</published>
    <updated>2024-01-11T06:32:02.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="DNNShifter"><a href="#DNNShifter" class="headerlink" title="DNNShifter"></a>DNNShifter</h1><ul><li><strong>Open Lottery Ticket Hypothesis (OpenLTH)</strong></li><li><strong>卷积、批处理归一化层</strong></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;DNNShifter&quot;&gt;&lt;a href=&quot;#DNNShifter&quot; class=&quot;headerlink&quot; title=&quot;DNNShifter&quot;&gt;&lt;/a&gt;DNNShifter&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Open Lottery Ticket Hypo</summary>
      
    
    
    
    
    <category term="文献" scheme="https://dyson-wang.github.io/SakuraGw_Kotoko/tags/%E6%96%87%E7%8C%AE/"/>
    
  </entry>
  
  <entry>
    <title>深度学习是机器学习领域的一个分支，涉及使用神经网络模型来学习和执行任务。以下是一些深度学习的教程和资源，适用于不同的学习水平：</title>
    <link href="https://dyson-wang.github.io/SakuraGw_Kotoko/2024/01/08/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%98%AF%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%A2%86%E5%9F%9F%E7%9A%84%E4%B8%80%E4%B8%AA%E5%88%86%E6%94%AF%EF%BC%8C%E6%B6%89%E5%8F%8A%E4%BD%BF%E7%94%A8%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B%E6%9D%A5%E5%AD%A6%E4%B9%A0%E5%92%8C%E6%89%A7%E8%A1%8C%E4%BB%BB%E5%8A%A1%E3%80%82%E4%BB%A5%E4%B8%8B%E6%98%AF%E4%B8%80%E4%BA%9B%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9A%84%E6%95%99%E7%A8%8B%E5%92%8C%E8%B5%84%E6%BA%90%EF%BC%8C%E9%80%82%E7%94%A8%E4%BA%8E%E4%B8%8D%E5%90%8C%E7%9A%84%E5%AD%A6%E4%B9%A0%E6%B0%B4%E5%B9%B3%EF%BC%9A/"/>
    <id>https://dyson-wang.github.io/SakuraGw_Kotoko/2024/01/08/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%98%AF%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%A2%86%E5%9F%9F%E7%9A%84%E4%B8%80%E4%B8%AA%E5%88%86%E6%94%AF%EF%BC%8C%E6%B6%89%E5%8F%8A%E4%BD%BF%E7%94%A8%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B%E6%9D%A5%E5%AD%A6%E4%B9%A0%E5%92%8C%E6%89%A7%E8%A1%8C%E4%BB%BB%E5%8A%A1%E3%80%82%E4%BB%A5%E4%B8%8B%E6%98%AF%E4%B8%80%E4%BA%9B%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9A%84%E6%95%99%E7%A8%8B%E5%92%8C%E8%B5%84%E6%BA%90%EF%BC%8C%E9%80%82%E7%94%A8%E4%BA%8E%E4%B8%8D%E5%90%8C%E7%9A%84%E5%AD%A6%E4%B9%A0%E6%B0%B4%E5%B9%B3%EF%BC%9A/</id>
    <published>2024-01-08T07:04:21.000Z</published>
    <updated>2024-01-08T07:05:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>深度学习是机器学习领域的一个分支，涉及使用神经网络模型来学习和执行任务。以下是一些深度学习的教程和资源，适用于不同的学习水平：</p><ol><li><p><strong>基础入门：</strong></p><ul><li><a href="https://www.deeplearning.ai/specialization/deep-learning/">Deep Learning Specialization</a> - 由吴恩达（Andrew Ng）教授主持的深度学习专项课程，适合初学者。</li></ul></li><li><p><strong>深度学习框架：</strong></p><ul><li><a href="https://pytorch.org/tutorials/">PyTorch Tutorials</a> - PyTorch官方提供的教程，适合希望使用PyTorch框架的学习者。</li></ul></li><li><p><strong>卷积神经网络（CNN）：</strong></p><ul><li><a href="https://www.coursera.org/learn/convolutional-neural-networks">Convolutional Neural Networks (Coursera)</a> - 由吴恩达教授主持的课程，介绍了卷积神经网络的基本原理。</li><li><a href="http://cs231n.stanford.edu/">CS231n: Convolutional Neural Networks for Visual Recognition</a> - 斯坦福大学的深度学习课程，涵盖了CNN和计算机视觉的基础知识。</li></ul></li><li><p><strong>循环神经网络（RNN）：</strong></p><ul><li><a href="https://www.coursera.org/learn/nlp-sequence-models">Sequence Models (Coursera)</a> - 吴恩达教授的课程，介绍了循环神经网络和序列模型在自然语言处理中的应用。</li></ul></li><li><p><strong>生成对抗网络（GAN）：</strong></p><ul><li><a href="https://www.coursera.org/learn/generative-adversarial-networks">Generative Adversarial Networks (Coursera)</a> - 由深度学习专家Ian Goodfellow主持的课程，深入介绍了生成对抗网络的概念和应用。</li></ul></li><li><p><strong>迁移学习：</strong></p><ul><li><a href="https://www.tensorflow.org/tutorials/images/transfer_learning_with_hub">Transfer Learning with TensorFlow Hub</a> - TensorFlow教程，演示如何使用迁移学习。</li></ul></li><li><p><strong>强化学习：</strong></p><ul><li><a href="https://www.coursera.org/specializations/reinforcement-learning">Reinforcement Learning Specialization</a> - 由加州大学尔湾分校的教授主持的强化学习专项课程。</li></ul></li></ol><p>这只是一个开始，深度学习领域有很多深入的主题，包括自然语言处理、计算机视觉、强化学习等。选择适合您学习水平和兴趣的教程，逐步深入研究。同时，通过实际项目和实践经验来巩固所学知识。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;深度学习是机器学习领域的一个分支，涉及使用神经网络模型来学习和执行任务。以下是一些深度学习的教程和资源，适用于不同的学习水平：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;基础入门：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.</summary>
      
    
    
    
    
    <category term="文献" scheme="https://dyson-wang.github.io/SakuraGw_Kotoko/tags/%E6%96%87%E7%8C%AE/"/>
    
  </entry>
  
  <entry>
    <title>server</title>
    <link href="https://dyson-wang.github.io/SakuraGw_Kotoko/2024/01/07/server/"/>
    <id>https://dyson-wang.github.io/SakuraGw_Kotoko/2024/01/07/server/</id>
    <published>2024-01-07T06:38:45.000Z</published>
    <updated>2024-01-07T07:55:45.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="server"><a href="#server" class="headerlink" title="server"></a>server</h1><h2 id="apt"><a href="#apt" class="headerlink" title="apt"></a>apt</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 清华源 /etc/apt/source.list</span><br><span class="line"># 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware</span><br><span class="line"></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware</span><br><span class="line"></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware</span><br><span class="line"></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/debian-security bookworm-security main contrib non-free non-free-firmware</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/debian-security bookworm-security main contrib non-free non-free-firmware</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config</span><br><span class="line">#PermitRootLogin yes</span><br><span class="line">#PasswordAuthentication yes</span><br><span class="line">/etc/init.d/ssh restart</span><br></pre></td></tr></table></figure><h2 id="第三方"><a href="#第三方" class="headerlink" title="第三方"></a>第三方</h2><h3 id="apt-下载"><a href="#apt-下载" class="headerlink" title="apt 下载"></a>apt 下载</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y curl vim net-tools nginx</span><br></pre></td></tr></table></figure><h3 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">curl -O https://nginx.org/download/nginx-1.24.0.tar.gz</span><br><span class="line">tar -xzvf nginx-1.24.0.tar.gz</span><br><span class="line"># 默认托管目录</span><br><span class="line">/var/www/html/</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;server&quot;&gt;&lt;a href=&quot;#server&quot; class=&quot;headerlink&quot; title=&quot;server&quot;&gt;&lt;/a&gt;server&lt;/h1&gt;&lt;h2 id=&quot;apt&quot;&gt;&lt;a href=&quot;#apt&quot; class=&quot;headerlink&quot; title=&quot;apt</summary>
      
    
    
    
    
    <category term="server" scheme="https://dyson-wang.github.io/SakuraGw_Kotoko/tags/server/"/>
    
  </entry>
  
  <entry>
    <title>About me.</title>
    <link href="https://dyson-wang.github.io/SakuraGw_Kotoko/2024/01/06/About%20me./"/>
    <id>https://dyson-wang.github.io/SakuraGw_Kotoko/2024/01/06/About%20me./</id>
    <published>2024-01-06T11:28:57.000Z</published>
    <updated>2024-01-07T07:08:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="About-me"><a href="#About-me" class="headerlink" title="About me."></a>About me.</h1><h3 id="WangXingHao"><a href="#WangXingHao" class="headerlink" title="WangXingHao"></a>WangXingHao</h3><h3 id="Dyson-Wang"><a href="#Dyson-Wang" class="headerlink" title="Dyson Wang"></a>Dyson Wang</h3><h3 id="樱川琴子aka-SakuraGw-Kotoko"><a href="#樱川琴子aka-SakuraGw-Kotoko" class="headerlink" title="樱川琴子aka.SakuraGw_Kotoko"></a>樱川琴子aka.SakuraGw_Kotoko</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;About-me&quot;&gt;&lt;a href=&quot;#About-me&quot; class=&quot;headerlink&quot; title=&quot;About me.&quot;&gt;&lt;/a&gt;About me.&lt;/h1&gt;&lt;h3 id=&quot;WangXingHao&quot;&gt;&lt;a href=&quot;#WangXingHao&quot; cla</summary>
      
    
    
    
    
    <category term="个人" scheme="https://dyson-wang.github.io/SakuraGw_Kotoko/tags/%E4%B8%AA%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>文献</title>
    <link href="https://dyson-wang.github.io/SakuraGw_Kotoko/2024/01/03/%E6%96%87%E7%8C%AE/"/>
    <id>https://dyson-wang.github.io/SakuraGw_Kotoko/2024/01/03/%E6%96%87%E7%8C%AE/</id>
    <published>2024-01-03T07:40:54.000Z</published>
    <updated>2024-01-11T02:57:11.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="文献"><a href="#文献" class="headerlink" title="文献"></a>文献</h1><ul><li><p>7-移动边缘计算_架构_应用和挑战_高志鹏</p></li><li><p>7-运营商边缘网络白皮书</p></li><li><p>史佳眉师姐论文</p></li><li><p>Edge_Intelligence_A_Computational_Task_Offloading_Scheme_for_Dependent_IoT_Application</p></li><li><p>iCache_An_Importance-Sampling-Informed_Cache_for_Accelerating_I_O-Bound_DNN_Model_Training</p></li><li><p>边缘计算_万物互联时代新型计算模型_施巍松</p></li><li><p>边缘计算_现状与展望_施巍松</p></li><li><p>A Survey on Optimization Techniques for Edge Artificial Intelligence (AI)</p></li></ul><p>通过硬件加速器和人工智能专用处理单元实现急需的优化。<br>物联网技术发展、轻量级加密、边缘即插即用、边缘数据异构</p><ul><li><a href="https://www.sciencedirect.com/science/article/pii/S0167739X23003576">DNNShifter: An efficient DNN pruning system for edge computing (2024) Future Generation Computer Systems, 152, 43-54.</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;文献&quot;&gt;&lt;a href=&quot;#文献&quot; class=&quot;headerlink&quot; title=&quot;文献&quot;&gt;&lt;/a&gt;文献&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;7-移动边缘计算_架构_应用和挑战_高志鹏&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;7-运营商边缘网络白皮书&lt;/p&gt;
&lt;/li&gt;</summary>
      
    
    
    
    
    <category term="文献" scheme="https://dyson-wang.github.io/SakuraGw_Kotoko/tags/%E6%96%87%E7%8C%AE/"/>
    
  </entry>
  
  <entry>
    <title>GitLab</title>
    <link href="https://dyson-wang.github.io/SakuraGw_Kotoko/2024/01/02/GitLab/"/>
    <id>https://dyson-wang.github.io/SakuraGw_Kotoko/2024/01/02/GitLab/</id>
    <published>2024-01-02T07:06:51.000Z</published>
    <updated>2024-01-02T11:24:42.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="GitLab"><a href="#GitLab" class="headerlink" title="GitLab"></a>GitLab</h1><h2 id="APT-安装"><a href="#APT-安装" class="headerlink" title="APT 安装"></a>APT 安装</h2><p>包管理器安装 GitLab Community Edition（CE）通常是一种简单且方便的方法，但具体步骤取决于你使用的操作系统。以下是针对一些常见的操作系统的包管理器安装步骤：</p><h3 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu:"></a>Ubuntu:</h3><ol><li><p>更新软件包列表：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure></li><li><p>安装必要的依赖：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y curl openssh-server ca-certificates</span><br></pre></td></tr></table></figure></li><li><p>添加 GitLab 的官方仓库：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.deb.sh | sudo bash</span><br></pre></td></tr></table></figure></li><li><p>安装 GitLab CE：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install gitlab-ce</span><br></pre></td></tr></table></figure></li><li><p>配置和启动 GitLab：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gitlab-ctl reconfigure</span><br></pre></td></tr></table></figure></li></ol><h3 id="Debian"><a href="#Debian" class="headerlink" title="Debian:"></a>Debian:</h3><ol><li><p>更新软件包列表：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure></li><li><p>安装必要的依赖：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y curl openssh-server ca-certificates</span><br></pre></td></tr></table></figure></li><li><p>添加 GitLab 的官方仓库：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.deb.sh | sudo bash</span><br></pre></td></tr></table></figure></li><li><p>安装 GitLab CE：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install gitlab-ce</span><br></pre></td></tr></table></figure></li><li><p>配置和启动 GitLab：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gitlab-ctl reconfigure</span><br></pre></td></tr></table></figure></li></ol><h3 id="CentOS"><a href="#CentOS" class="headerlink" title="CentOS:"></a>CentOS:</h3><ol><li><p>安装必要的依赖：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y curl policycoreutils-python openssh-server</span><br></pre></td></tr></table></figure></li><li><p>添加 GitLab 的官方仓库：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo curl https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.rpm.sh | sudo bash</span><br></pre></td></tr></table></figure></li><li><p>安装 GitLab CE：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y gitlab-ce</span><br></pre></td></tr></table></figure></li><li><p>配置和启动 GitLab：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gitlab-ctl reconfigure</span><br></pre></td></tr></table></figure></li></ol><p>这些步骤可能会有所变化，具体取决于操作系统的版本和配置。请务必查阅 GitLab 官方文档以获取最新和详细的安装指南。</p><h2 id="Omnibus-安装"><a href="#Omnibus-安装" class="headerlink" title="Omnibus 安装"></a>Omnibus 安装</h2><p>在部署 GitLab Community Edition (CE) 之前，请确保你的服务器满足 GitLab 的<a href="https://docs.gitlab.com/ee/install/requirements.html">系统要求</a>。</p><p>以下是 GitLab CE 的基本部署步骤。这里提供的步骤是使用 Omnibus 安装方式，这是 GitLab 官方推荐的安装方式。</p><h3 id="步骤-1-安装和配置依赖项"><a href="#步骤-1-安装和配置依赖项" class="headerlink" title="步骤 1: 安装和配置依赖项"></a>步骤 1: 安装和配置依赖项</h3><ol><li><p>更新系统软件包：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get upgrade</span><br></pre></td></tr></table></figure></li><li><p>安装必要的依赖项：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y curl openssh-server ca-certificates postfix</span><br></pre></td></tr></table></figure><p> 在安装 postfix 时，选择 “Internet Site” 并按照提示设置系统邮件配置。</p></li></ol><h3 id="步骤-2-添加-GitLab-仓库"><a href="#步骤-2-添加-GitLab-仓库" class="headerlink" title="步骤 2: 添加 GitLab 仓库"></a>步骤 2: 添加 GitLab 仓库</h3><ol><li><p>添加 GitLab 的 GPG 密钥：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl https://packages.gitlab.com/gpg.key | sudo gpg --dearmor -o /usr/share/keyrings/gitlab-archive-keyring.gpg</span><br></pre></td></tr></table></figure></li><li><p>添加 GitLab 仓库：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb [signed-by=/usr/share/keyrings/gitlab-archive-keyring.gpg] https://packages.gitlab.com/gitlab/gitlab-ce/ubuntu/ <span class="subst">$(lsb_release -cs)</span> main&quot;</span> | sudo <span class="built_in">tee</span> /etc/apt/sources.list.d/gitlab-ce.list</span><br></pre></td></tr></table></figure></li></ol><h3 id="步骤-3-安装-GitLab-CE"><a href="#步骤-3-安装-GitLab-CE" class="headerlink" title="步骤 3: 安装 GitLab CE"></a>步骤 3: 安装 GitLab CE</h3><ol><li><p>更新软件包索引：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure></li><li><p>安装 GitLab CE：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install gitlab-ce</span><br></pre></td></tr></table></figure></li></ol><h3 id="步骤-4-配置和启动-GitLab"><a href="#步骤-4-配置和启动-GitLab" class="headerlink" title="步骤 4: 配置和启动 GitLab"></a>步骤 4: 配置和启动 GitLab</h3><ol><li><p>打开配置文件：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/gitlab/gitlab.rb</span><br></pre></td></tr></table></figure><p> 根据需要修改配置。特别是，请确保 <code>external_url</code> 的值是你 GitLab 访问的 URL。</p></li><li><p>重新配置并重启 GitLab：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gitlab-ctl reconfigure</span><br></pre></td></tr></table></figure></li><li><p>启动 GitLab：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gitlab-ctl start</span><br></pre></td></tr></table></figure><p> 你也可以使用 <code>sudo gitlab-ctl restart</code> 重启服务。</p></li></ol><h3 id="步骤-5-访问-GitLab"><a href="#步骤-5-访问-GitLab" class="headerlink" title="步骤 5: 访问 GitLab"></a>步骤 5: 访问 GitLab</h3><p>在浏览器中访问你设置的 <code>external_url</code> 地址，你将会看到 GitLab 的登录页面。首次登录时，使用默认的管理员用户名 <code>root</code> 和密码 <code>5iveL!fe</code> 登录。</p><p>请注意，首次登录后，建议修改管理员密码以增加安全性。</p><p>这是一个简单的部署步骤，确保根据实际需求进行配置。有关更详细的配置和设置，请查阅<a href="https://docs.gitlab.com/ee/install/">官方文档</a>。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;GitLab&quot;&gt;&lt;a href=&quot;#GitLab&quot; class=&quot;headerlink&quot; title=&quot;GitLab&quot;&gt;&lt;/a&gt;GitLab&lt;/h1&gt;&lt;h2 id=&quot;APT-安装&quot;&gt;&lt;a href=&quot;#APT-安装&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    
    <category term="教程" scheme="https://dyson-wang.github.io/SakuraGw_Kotoko/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>openmp</title>
    <link href="https://dyson-wang.github.io/SakuraGw_Kotoko/2023/12/28/openmp/"/>
    <id>https://dyson-wang.github.io/SakuraGw_Kotoko/2023/12/28/openmp/</id>
    <published>2023-12-28T07:17:56.000Z</published>
    <updated>2024-01-08T02:17:46.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="openmp"><a href="#openmp" class="headerlink" title="openmp"></a>openmp</h1><h2 id="p"><a href="#p" class="headerlink" title="-p"></a>-p</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1. 90-1000-146146</span><br><span class="line">2. 121-1000-204525</span><br><span class="line">3. 52-1000-60153</span><br><span class="line">4. 36-1000-61632</span><br><span class="line">5. 88-1000-174049</span><br><span class="line">6. 170-171-205061</span><br><span class="line">7. 144-145-235589</span><br><span class="line">8. 198-199-371482</span><br></pre></td></tr></table></figure><h2 id="c"><a href="#c" class="headerlink" title="-c"></a>-c</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. 143-21-13752</span><br><span class="line">2. 106-27-6851</span><br><span class="line">3. 181-21-20332</span><br><span class="line">4. 73-20-3250</span><br><span class="line">5. 163-30-18056</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;openmp&quot;&gt;&lt;a href=&quot;#openmp&quot; class=&quot;headerlink&quot; title=&quot;openmp&quot;&gt;&lt;/a&gt;openmp&lt;/h1&gt;&lt;h2 id=&quot;p&quot;&gt;&lt;a href=&quot;#p&quot; class=&quot;headerlink&quot; title=&quot;-p&quot;&gt;&lt;/a</summary>
      
    
    
    
    
    <category term="个人" scheme="https://dyson-wang.github.io/SakuraGw_Kotoko/tags/%E4%B8%AA%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>Gem5</title>
    <link href="https://dyson-wang.github.io/SakuraGw_Kotoko/2023/11/02/Gem5/"/>
    <id>https://dyson-wang.github.io/SakuraGw_Kotoko/2023/11/02/Gem5/</id>
    <published>2023-11-02T06:59:31.000Z</published>
    <updated>2024-01-08T02:17:46.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Gem5"><a href="#Gem5" class="headerlink" title="Gem5"></a>Gem5</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Gem5&quot;&gt;&lt;a href=&quot;#Gem5&quot; class=&quot;headerlink&quot; title=&quot;Gem5&quot;&gt;&lt;/a&gt;Gem5&lt;/h1&gt;</summary>
      
    
    
    
    
    <category term="个人" scheme="https://dyson-wang.github.io/SakuraGw_Kotoko/tags/%E4%B8%AA%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>mariadb</title>
    <link href="https://dyson-wang.github.io/SakuraGw_Kotoko/2023/09/21/mariadb/"/>
    <id>https://dyson-wang.github.io/SakuraGw_Kotoko/2023/09/21/mariadb/</id>
    <published>2023-09-21T10:00:10.000Z</published>
    <updated>2024-01-08T02:17:16.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="mariadb"><a href="#mariadb" class="headerlink" title="mariadb"></a>mariadb</h1><h2 id="install"><a href="#install" class="headerlink" title="install"></a>install</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y mariadb-server</span><br><span class="line"></span><br><span class="line">sudo systemctl status mariadb</span><br><span class="line"></span><br><span class="line">sudo systemctl start mariadb</span><br><span class="line"></span><br><span class="line">sudo systemctl enable mariadb</span><br><span class="line"></span><br><span class="line">sudo mysql_secure_installation</span><br><span class="line"></span><br><span class="line">sudo mysql</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;mariadb&quot;&gt;&lt;a href=&quot;#mariadb&quot; class=&quot;headerlink&quot; title=&quot;mariadb&quot;&gt;&lt;/a&gt;mariadb&lt;/h1&gt;&lt;h2 id=&quot;install&quot;&gt;&lt;a href=&quot;#install&quot; class=&quot;headerlink</summary>
      
    
    
    
    
    <category term="博客" scheme="https://dyson-wang.github.io/SakuraGw_Kotoko/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>Https Notes</title>
    <link href="https://dyson-wang.github.io/SakuraGw_Kotoko/2023/09/20/Https%20Notes/"/>
    <id>https://dyson-wang.github.io/SakuraGw_Kotoko/2023/09/20/Https%20Notes/</id>
    <published>2023-09-20T06:39:33.000Z</published>
    <updated>2024-01-08T02:17:16.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Https-Notes"><a href="#Https-Notes" class="headerlink" title="Https Notes"></a>Https Notes</h1><h2 id="虚构一个CA机构"><a href="#虚构一个CA机构" class="headerlink" title="虚构一个CA机构"></a>虚构一个CA机构</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 生成CA认证机构的证书密钥key</span><br><span class="line"># 需要设置密码，输入两次</span><br><span class="line">openssl genrsa -des3 -out ca.key 2048</span><br><span class="line"></span><br><span class="line"># 去除密钥里的密码(可选)</span><br><span class="line"># 这里需要再输入一次原来设的密码</span><br><span class="line">openssl rsa -in ca.key -out ca.key</span><br><span class="line"></span><br><span class="line"># 用私钥ca.key生成CA认证机构的证书ca.crt</span><br><span class="line"># 其实就是相当于用私钥生成公钥，再把公钥包装成证书</span><br><span class="line">openssl req -new -x509 -key ca.key -out ca.crt -days 3650</span><br><span class="line"># 这个证书ca.crt有的又称为&quot;根证书&quot;,因为可以用来认证其他证书</span><br></pre></td></tr></table></figure><h2 id="生成网站的证书"><a href="#生成网站的证书" class="headerlink" title="生成网站的证书"></a>生成网站的证书</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 生成自己网站的密钥server.key</span><br><span class="line">openssl genrsa -des3 -out server.key 2048</span><br><span class="line"></span><br><span class="line"># 生成自己网站证书的请求文件</span><br><span class="line"># 如果找外面的CA机构认证，也是发个请求文件给他们</span><br><span class="line"># 这个私钥就包含在请求文件中了，认证机构要用它来生成网站的公钥，然后包装成一个证书</span><br><span class="line">openssl req -new -key server.key -out server.csr</span><br><span class="line"></span><br><span class="line"># 使用虚拟的CA认证机构的证书ca.crt，来对自己网站的证书请求文件server.csr进行处理，生成签名后的证书server.crt</span><br><span class="line"># 注意设置序列号和有效期（一般都设1年）</span><br><span class="line">openssl x509 -req -in server.csr -CA ca.crt -CAkey ca.key -set_serial 01 -out server.crt -days 365</span><br><span class="line"></span><br><span class="line">// set_serial指定生成的自签名根证书的序列号，默认情况下生成的自签名根证书序列号是0；该选项也只有在生成自签名根证书的时候有效。</span><br></pre></td></tr></table></figure><h2 id="配置nginx"><a href="#配置nginx" class="headerlink" title="配置nginx"></a>配置nginx</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">把server.crt 和server.key 文件放在nginx/conf文件夹下。(和nginx.conf文件同一文件夹)</span><br><span class="line"> </span><br><span class="line">ssl_certificate server.crt;</span><br><span class="line">ssl_certificate_key server.key;</span><br><span class="line"></span><br><span class="line">/443 搜索 注释</span><br></pre></td></tr></table></figure><h2 id="windows-hosts配置"><a href="#windows-hosts配置" class="headerlink" title="windows hosts配置"></a>windows hosts配置</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\System32\drivers\etc\hosts</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Https-Notes&quot;&gt;&lt;a href=&quot;#Https-Notes&quot; class=&quot;headerlink&quot; title=&quot;Https Notes&quot;&gt;&lt;/a&gt;Https Notes&lt;/h1&gt;&lt;h2 id=&quot;虚构一个CA机构&quot;&gt;&lt;a href=&quot;#虚构一个CA机构&quot;</summary>
      
    
    
    
    
    <category term="博客" scheme="https://dyson-wang.github.io/SakuraGw_Kotoko/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>linux</title>
    <link href="https://dyson-wang.github.io/SakuraGw_Kotoko/2023/09/10/linux/"/>
    <id>https://dyson-wang.github.io/SakuraGw_Kotoko/2023/09/10/linux/</id>
    <published>2023-09-10T08:13:34.000Z</published>
    <updated>2024-01-08T02:17:46.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h1><h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><ul><li>git</li><li>nodejs</li><li>docker</li><li>kubernetes</li><li>ngnix</li><li>mariadb</li><li>gitlab</li><li>github</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;linux&quot;&gt;&lt;a href=&quot;#linux&quot; class=&quot;headerlink&quot; title=&quot;linux&quot;&gt;&lt;/a&gt;linux&lt;/h1&gt;&lt;h2 id=&quot;web&quot;&gt;&lt;a href=&quot;#web&quot; class=&quot;headerlink&quot; title=&quot;web&quot;&gt;&lt;/</summary>
      
    
    
    
    
    <category term="个人" scheme="https://dyson-wang.github.io/SakuraGw_Kotoko/tags/%E4%B8%AA%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>rocky logs</title>
    <link href="https://dyson-wang.github.io/SakuraGw_Kotoko/2023/06/24/rocky%20logs/"/>
    <id>https://dyson-wang.github.io/SakuraGw_Kotoko/2023/06/24/rocky%20logs/</id>
    <published>2023-06-24T01:06:05.000Z</published>
    <updated>2024-01-08T02:17:46.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="rocky-logs"><a href="#rocky-logs" class="headerlink" title="rocky logs"></a>rocky logs</h1><h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><ul><li><p>切换yum源nju mirror</p></li><li><p>安装net-tools</p></li><li><p>git 2.39.1</p></li><li><p>tar 1.34</p></li><li><p>手动全局安装nodejs</p></li><li><p>配置npm mirror</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm get registry</span><br><span class="line">npm config set registry https://registry.npmmirror.com</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yarn config get registry</span><br><span class="line">yarn config set registry https://registry.npmmirror.com</span><br></pre></td></tr></table></figure></li><li><p>yum-utils</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y yum-utils</span><br><span class="line"></span><br><span class="line">sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure></li><li><p>docker</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin -y</span><br><span class="line"></span><br><span class="line">systemctl start docker</span><br><span class="line"></span><br><span class="line">systemctl enable docker</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">// /etc/docker/daemon.json</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    &quot;registry-mirrors&quot;: [</span><br><span class="line">        &quot;https://24fgpaf5.mirror.aliyuncs.com&quot;,</span><br><span class="line">        &quot;https://83f60d800b31479a97ed45ce119dab75.mirror.swr.myhuaweicloud.com&quot;,</span><br><span class="line">        &quot;https://hub-mirror.c.163.com&quot;,</span><br><span class="line">        &quot;https://docker.mirrors.ustc.edu.cn&quot;,</span><br><span class="line">        &quot;https://mirror.baidubce.com&quot;,</span><br><span class="line">        &quot;https://reg-mirror.qiniu.com&quot;,</span><br><span class="line">        &quot;https://mirror.ccs.tencentyun.com&quot;,</span><br><span class="line">        &quot;https://registry.docker-cn.com&quot;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br><span class="line">docker info</span><br></pre></td></tr></table></figure></li></ul><h1 id="softwares"><a href="#softwares" class="headerlink" title="softwares"></a>softwares</h1><h2 id="gitlab"><a href="#gitlab" class="headerlink" title="gitlab"></a>gitlab</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">docker pull gitlab/gitlab-ce</span><br><span class="line">docker images</span><br><span class="line"></span><br><span class="line">docker run --detach \</span><br><span class="line">  --publish 16443:443 --publish 16680:80 --publish 16622:22 \</span><br><span class="line">  --name gitlab \</span><br><span class="line">  --restart always \</span><br><span class="line">  --volume $GITLAB_HOME/config:/etc/gitlab:Z \</span><br><span class="line">  --volume $GITLAB_HOME/logs:/var/log/gitlab:Z \</span><br><span class="line">  --volume $GITLAB_HOME/data:/var/opt/gitlab:Z \</span><br><span class="line">  gitlab/gitlab-ce</span><br><span class="line"></span><br><span class="line">docker run </span><br><span class="line">  -d</span><br><span class="line">  -p 443:443 -p 9000:80 -p 22:22 //外：内</span><br><span class="line">  --name gitlab</span><br><span class="line">  --restart always</span><br><span class="line">  -v $HOME/docker/gitlab/config:/etc/gitlab</span><br><span class="line">  -v $HOME/docker/gitlab/logs:/var/log/gitlab</span><br><span class="line">  -v $HOME/docker/gitlab/data:/var/opt/gitlab</span><br><span class="line">  gitlab/gitlab-ce</span><br><span class="line"></span><br><span class="line"># -d：后台运行</span><br><span class="line"># -p：将容器内部端口向外映射</span><br><span class="line"># --name：命名容器名称</span><br><span class="line"># -v：将容器内数据文件夹或者日志、配置等文件夹挂载到宿主机指定目录</span><br><span class="line"></span><br><span class="line"># 443:443：将http：443映射到外部端口443</span><br><span class="line"># 9000:80：将web：80映射到外部端口9000</span><br><span class="line"># 22:22：将ssh：22映射到外部端口22</span><br><span class="line"></span><br><span class="line">port 8888 root 15630148029</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="nginx-usr-local-nginx"><a href="#nginx-usr-local-nginx" class="headerlink" title="nginx &#x2F;usr&#x2F;local&#x2F;nginx"></a>nginx &#x2F;usr&#x2F;local&#x2F;nginx</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;rocky-logs&quot;&gt;&lt;a href=&quot;#rocky-logs&quot; class=&quot;headerlink&quot; title=&quot;rocky logs&quot;&gt;&lt;/a&gt;rocky logs&lt;/h1&gt;&lt;h2 id=&quot;安装环境&quot;&gt;&lt;a href=&quot;#安装环境&quot; class=&quot;head</summary>
      
    
    
    
    
    <category term="个人" scheme="https://dyson-wang.github.io/SakuraGw_Kotoko/tags/%E4%B8%AA%E4%BA%BA/"/>
    
    <category term="博客" scheme="https://dyson-wang.github.io/SakuraGw_Kotoko/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>docker in rocky</title>
    <link href="https://dyson-wang.github.io/SakuraGw_Kotoko/2023/05/09/docker%20in%20rocky/"/>
    <id>https://dyson-wang.github.io/SakuraGw_Kotoko/2023/05/09/docker%20in%20rocky/</id>
    <published>2023-05-09T11:19:11.000Z</published>
    <updated>2024-01-08T02:17:16.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="docker-in-rocky"><a href="#docker-in-rocky" class="headerlink" title="docker in rocky"></a>docker in rocky</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y yum-utils</span><br><span class="line">sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line">yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line">yum install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">// daemon.json</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    &quot;registry-mirrors&quot;: [</span><br><span class="line">        &quot;https://24fgpaf5.mirror.aliyuncs.com&quot;,</span><br><span class="line">        &quot;https://83f60d800b31479a97ed45ce119dab75.mirror.swr.myhuaweicloud.com&quot;,</span><br><span class="line">        &quot;https://hub-mirror.c.163.com&quot;,</span><br><span class="line">        &quot;https://docker.mirrors.ustc.edu.cn&quot;,</span><br><span class="line">        &quot;https://mirror.baidubce.com&quot;,</span><br><span class="line">        &quot;https://reg-mirror.qiniu.com&quot;,</span><br><span class="line">        &quot;https://mirror.ccs.tencentyun.com&quot;,</span><br><span class="line">        &quot;https://registry.docker-cn.com&quot;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br><span class="line">docker info</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo dnf check-update</span><br><span class="line">sudo dnf config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line">sudo dnf install docker-ce docker-ce-cli containerd.io -y</span><br><span class="line">sudo systemctl start docker</span><br><span class="line">sudo systemctl status docker</span><br><span class="line">sudo systemctl enable docker</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker pull mysql:latest</span><br><span class="line">docker images</span><br><span class="line">docker ps -a</span><br><span class="line"></span><br><span class="line">docker run -itd --name mysql-test -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 mysql</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>-i 以交互模式运行容器，通常与 -t 同时使用<br>-t 为容器重新分配一个伪输入终端，通常与 -i 同时使用<br>-d 后台运行容器，并返回容器ID<br>–name&#x3D;”nginx-lb”: 为容器指定一个名称<br>-e username&#x3D;”ritchie”: 设置环境变量<br>-p: 指定端口映射，格式为：主机(宿主)端口:容器端口</p><h2 id="drone"><a href="#drone" class="headerlink" title="drone"></a>drone</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">docker run</span><br><span class="line">  --volume=/srv/drone:/data</span><br><span class="line">  --env=DRONE_GITLAB_SERVER=HTTP://192.168.1.104:8888</span><br><span class="line">  --env=DRONE_GITLAB_CLIENT_ID=b19a3167484bf0d283e16a57b4f4e31e63617b48ebf4fc1714a2078eecaef00c</span><br><span class="line">  --env=DRONE_GITLAB_CLIENT_SECRET=56bba1c6fa31998b6e0923c54300f60ba513b9ffcdc41696c258975ff1537f54</span><br><span class="line">  --env=DRONE_RPC_SECRET=323c3689a93a2853c38b28e78736a482</span><br><span class="line">  --env=DRONE_SERVER_HOST=192.168.1.104</span><br><span class="line">  --env=DRONE_SERVER_PROTO=http</span><br><span class="line">  --publish=32222:80</span><br><span class="line">  --publish=32221:443</span><br><span class="line">  --restart=always</span><br><span class="line">  --detach=true</span><br><span class="line">  --name=drone</span><br><span class="line">  drone/drone:latest</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">version: &#x27;3.9&#x27;</span><br><span class="line"># 创建自定义网络</span><br><span class="line">networks:</span><br><span class="line">  drone:</span><br><span class="line">    name: drone</span><br><span class="line">    driver: bridge</span><br><span class="line">services:</span><br><span class="line">  # 数据库服务</span><br><span class="line">  db:</span><br><span class="line">    image: postgres:latest</span><br><span class="line">    container_name: drone_db</span><br><span class="line">    restart: always</span><br><span class="line">    networks:</span><br><span class="line">      - drone # 加入到drone网络</span><br><span class="line">    ports:</span><br><span class="line">      - &#x27;32000:5432&#x27;</span><br><span class="line">    environment:</span><br><span class="line">      - POSTGRES_USER=drone # PGSQL默认用户</span><br><span class="line">      - POSTGRES_PASSWORD=drone # PGSQL默认密码</span><br><span class="line">      - POSTGRES_DB=drone # PGSQL默认数据库</span><br><span class="line">    volumes:</span><br><span class="line">      - /srv/drone/db:/var/lib/postgresql/data</span><br><span class="line">  # Drone Server 服务</span><br><span class="line">  server:</span><br><span class="line">    image: drone/drone:latest # 目前drone最新版本为 2.8.0</span><br><span class="line">    container_name: drone_server</span><br><span class="line">    restart: always</span><br><span class="line">    networks:</span><br><span class="line">      - drone # 加入到drone网络</span><br><span class="line">    ports:</span><br><span class="line">      - &#x27;32222:80&#x27;</span><br><span class="line">    environment:</span><br><span class="line">      - DRONE_SERVER_PROTO=http # 访问协议，创建webHooks和重定向</span><br><span class="line">      - DRONE_SERVER_HOST=192.168.1.104:32222 # 主机名称，创建webHooks和重定向</span><br><span class="line">      - DRONE_RPC_SECRET=323c3689a93a2853c38b28e78736a482 # 与 drone runner 通讯的密钥</span><br><span class="line">      - DRONE_USER_CREATE=username:root,admin:true # 管理员账户</span><br><span class="line">      - DRONE_DATABASE_DRIVER=postgres # 数据库类型</span><br><span class="line">      - DRONE_DATABASE_DATASOURCE=postgres://drone:drone@db/drone?sslmode=disable # 数据库连接</span><br><span class="line">      - DRONE_GIT_ALWAYS_AUTH=true # 使用 oauth 身份验证信息拉取代码</span><br><span class="line">      - DRONE_GITLAB_SERVER=HTTP://192.168.1.104:8888</span><br><span class="line">      - DRONE_GITLAB_CLIENT_ID=b19a3167484bf0d283e16a57b4f4e31e63617b48ebf4fc1714a2078eecaef00c</span><br><span class="line">      - DRONE_GITLAB_CLIENT_SECRET=56bba1c6fa31998b6e0923c54300f60ba513b9ffcdc41696c258975ff1537f54</span><br><span class="line">    volumes:</span><br><span class="line">      - /srv/drone/server:/data</span><br><span class="line">      - /var/run/docker.sock:/var/run/docker.sock</span><br><span class="line">    depends_on:</span><br><span class="line">      - db</span><br><span class="line">  # Drone Docker Runner</span><br><span class="line">  runner:</span><br><span class="line">    image: drone/drone-runner-docker:latest # 目前drone-runner-docker最新版本为 1.8.0</span><br><span class="line">    container_name: drone_runner</span><br><span class="line">    restart: always</span><br><span class="line">    networks:</span><br><span class="line">      - drone # 加入到drone网络</span><br><span class="line">    ports:</span><br><span class="line">      - &#x27;32220:3000&#x27;</span><br><span class="line">    environment:</span><br><span class="line">      - DRONE_RUNNER_NAME=docker-runner</span><br><span class="line">      - DRONE_RUNNER_CAPACITY=10 # 限制runner可执行的并发管道数量</span><br><span class="line">      - DRONE_RPC_PROTO=http # 访问drone server 协议</span><br><span class="line">      - DRONE_RPC_HOST=192.168.1.104:32222 # 访问drone server 服务器地址</span><br><span class="line">      - DRONE_RPC_SECRET=e1ad8a7f3dbc68ca9c21bcc949335009 # 与 drone server 通讯的密钥</span><br><span class="line">      - DRONE_UI_USERNAME=root # Drone Runner 的 UI 用户账号</span><br><span class="line">      - DRONE_UI_PASSWORD=8888 # Drone Runner 的 UI 用户密码</span><br><span class="line">    volumes:</span><br><span class="line">      - &#x27;/var/run/docker.sock:/var/run/docker.sock&#x27;</span><br><span class="line">    depends_on:</span><br><span class="line">      - server</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;docker-in-rocky&quot;&gt;&lt;a href=&quot;#docker-in-rocky&quot; class=&quot;headerlink&quot; title=&quot;docker in rocky&quot;&gt;&lt;/a&gt;docker in rocky&lt;/h1&gt;&lt;figure class=&quot;highli</summary>
      
    
    
    
    
    <category term="博客" scheme="https://dyson-wang.github.io/SakuraGw_Kotoko/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>mac</title>
    <link href="https://dyson-wang.github.io/SakuraGw_Kotoko/2023/04/25/mac/"/>
    <id>https://dyson-wang.github.io/SakuraGw_Kotoko/2023/04/25/mac/</id>
    <published>2023-04-25T09:10:20.000Z</published>
    <updated>2024-01-08T02:17:46.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="mac"><a href="#mac" class="headerlink" title="mac"></a>mac</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python macrecovery.py -b Mac-4B682C642B45593E -m 00000000000000000 download</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c:\&quot;Program Files&quot;\qemu\qemu-img convert -O vmdk -o compat6 BaseSystem.dmg recovery.vmdk</span><br></pre></td></tr></table></figure><p>.vmx </p><p>ethenet0 &#x3D; “vmxnet3”</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;mac&quot;&gt;&lt;a href=&quot;#mac&quot; class=&quot;headerlink&quot; title=&quot;mac&quot;&gt;&lt;/a&gt;mac&lt;/h1&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pr</summary>
      
    
    
    
    
    <category term="个人" scheme="https://dyson-wang.github.io/SakuraGw_Kotoko/tags/%E4%B8%AA%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>Logs</title>
    <link href="https://dyson-wang.github.io/SakuraGw_Kotoko/2023/04/19/Logs/"/>
    <id>https://dyson-wang.github.io/SakuraGw_Kotoko/2023/04/19/Logs/</id>
    <published>2023-04-19T03:23:25.000Z</published>
    <updated>2024-01-08T02:17:46.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Logs"><a href="#Logs" class="headerlink" title="Logs"></a>Logs</h1><ul><li>安装 net-tools</li><li>安装 git</li><li>安装 nodejs</li><li>安装 mariadb-server</li><li>mysql_secure_installation 00125</li><li></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Logs&quot;&gt;&lt;a href=&quot;#Logs&quot; class=&quot;headerlink&quot; title=&quot;Logs&quot;&gt;&lt;/a&gt;Logs&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;安装 net-tools&lt;/li&gt;
&lt;li&gt;安装 git&lt;/li&gt;
&lt;li&gt;安装 nodejs&lt;/li&gt;
&lt;li</summary>
      
    
    
    
    
    <category term="个人" scheme="https://dyson-wang.github.io/SakuraGw_Kotoko/tags/%E4%B8%AA%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>BND</title>
    <link href="https://dyson-wang.github.io/SakuraGw_Kotoko/2023/04/17/BND/"/>
    <id>https://dyson-wang.github.io/SakuraGw_Kotoko/2023/04/17/BND/</id>
    <published>2023-04-17T12:18:09.000Z</published>
    <updated>2024-01-08T02:17:45.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="BND"><a href="#BND" class="headerlink" title="BND"></a>BND</h1><p>设每个用户下每个命名空间，可以单独配置一个数据库用于所建云函数的链接。</p><h3 id="新建函数"><a href="#新建函数" class="headerlink" title="新建函数"></a>新建函数</h3><p>API种类<br>1、数据库交互<br>2、静态资源上传与请求<br>3、函数内运算响应</p><p>沙箱逃逸</p><p>vm</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">const vm = require(&#x27;vm&#x27;);</span><br><span class="line">vm.runInNewContext(&#x27;this.constructor.constructor(&quot;return process&quot;)().exit()&#x27;);</span><br><span class="line">console.log(&#x27;Never gets executed.&#x27;);</span><br></pre></td></tr></table></figure><p>vm2</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">const &#123;VM&#125; = require(&#x27;vm2&#x27;);</span><br><span class="line">new VM().run(&#x27;this.constructor.constructor(&quot;return process&quot;)().exit()&#x27;);</span><br><span class="line">// Throws ReferenceError: process is not defined</span><br></pre></td></tr></table></figure><h1 id="API"><a href="#API" class="headerlink" title="API"></a>API</h1><h2 id="func部分"><a href="#func部分" class="headerlink" title="func部分"></a>func部分</h2><h3 id="调用函数-GET方法"><a href="#调用函数-GET方法" class="headerlink" title="调用函数(GET方法)"></a>调用函数(GET方法)</h3><p><strong>GET</strong> <em>&#x2F;faas&#x2F;:id</em></p><p><strong>return</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  //标准返回对象</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="调用函数-POST方法"><a href="#调用函数-POST方法" class="headerlink" title="调用函数(POST方法)"></a>调用函数(POST方法)</h3><p><strong>POST</strong> <em>&#x2F;faas&#x2F;:id</em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  //示例对象</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>return</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  //标准返回对象</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="backend部分"><a href="#backend部分" class="headerlink" title="backend部分"></a>backend部分</h2><h3 id="添加函数"><a href="#添加函数" class="headerlink" title="添加函数"></a>添加函数</h3><p><strong>POST</strong> <em>&#x2F;addfunc</em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  user-token,</span><br><span class="line">  codeStr:String, //代码字符串</span><br><span class="line">  method:String, //函数方法</span><br><span class="line">  objScan:Object, //输入实例对象</span><br><span class="line">  comment:String, //函数功能备注</span><br><span class="line">  maxruntime</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>return</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  status,</span><br><span class="line">  message,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="请求函数列表"><a href="#请求函数列表" class="headerlink" title="请求函数列表"></a>请求函数列表</h3><h4 id="用户下全部函数"><a href="#用户下全部函数" class="headerlink" title="用户下全部函数"></a>用户下全部函数</h4><p><strong>GET</strong> <em>&#x2F;funclist</em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user-token</span><br></pre></td></tr></table></figure><p><strong>return</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  funcarray:Array[&#123;</span><br><span class="line">      functionid,</span><br><span class="line">      createTime,</span><br><span class="line">      invokeTimes,</span><br><span class="line">      namespaceid,</span><br><span class="line">      master,</span><br><span class="line">      ...</span><br><span class="line">    &#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="命名空间下全部函数"><a href="#命名空间下全部函数" class="headerlink" title="命名空间下全部函数"></a>命名空间下全部函数</h4><p><strong>GET</strong> <em>&#x2F;funclist&#x2F;:namespaceid</em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user-token</span><br></pre></td></tr></table></figure><p><strong>return</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  funcarray:Array[&#123;</span><br><span class="line">      functionid,</span><br><span class="line">      createTime,</span><br><span class="line">      invokeTimes,</span><br><span class="line">      namespaceid,</span><br><span class="line">      master,</span><br><span class="line">      ...</span><br><span class="line">    &#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;BND&quot;&gt;&lt;a href=&quot;#BND&quot; class=&quot;headerlink&quot; title=&quot;BND&quot;&gt;&lt;/a&gt;BND&lt;/h1&gt;&lt;p&gt;设每个用户下每个命名空间，可以单独配置一个数据库用于所建云函数的链接。&lt;/p&gt;
&lt;h3 id=&quot;新建函数&quot;&gt;&lt;a href=&quot;#新建</summary>
      
    
    
    
    
    <category term="个人" scheme="https://dyson-wang.github.io/SakuraGw_Kotoko/tags/%E4%B8%AA%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>Serverless in linux</title>
    <link href="https://dyson-wang.github.io/SakuraGw_Kotoko/2023/04/09/Serverless%20in%20linux/"/>
    <id>https://dyson-wang.github.io/SakuraGw_Kotoko/2023/04/09/Serverless%20in%20linux/</id>
    <published>2023-04-09T07:13:31.000Z</published>
    <updated>2024-01-08T02:17:46.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Serverless-in-linux"><a href="#Serverless-in-linux" class="headerlink" title="Serverless in linux"></a>Serverless in linux</h1><h2 id="rocky-linux-安装-git、nodejs"><a href="#rocky-linux-安装-git、nodejs" class="headerlink" title="rocky linux 安装 git、nodejs"></a>rocky linux 安装 git、nodejs</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install git nodejs</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Serverless-in-linux&quot;&gt;&lt;a href=&quot;#Serverless-in-linux&quot; class=&quot;headerlink&quot; title=&quot;Serverless in linux&quot;&gt;&lt;/a&gt;Serverless in linux&lt;/h1&gt;&lt;h2 i</summary>
      
    
    
    
    
    <category term="个人" scheme="https://dyson-wang.github.io/SakuraGw_Kotoko/tags/%E4%B8%AA%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>三月学习大纲</title>
    <link href="https://dyson-wang.github.io/SakuraGw_Kotoko/2023/02/24/%E4%B8%89%E6%9C%88%E5%AD%A6%E4%B9%A0%E5%A4%A7%E7%BA%B2/"/>
    <id>https://dyson-wang.github.io/SakuraGw_Kotoko/2023/02/24/%E4%B8%89%E6%9C%88%E5%AD%A6%E4%B9%A0%E5%A4%A7%E7%BA%B2/</id>
    <published>2023-02-24T11:01:12.000Z</published>
    <updated>2024-01-06T11:28:50.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="三月学习大纲"><a href="#三月学习大纲" class="headerlink" title="三月学习大纲"></a>三月学习大纲</h1><p>8：00 - 12：00 离散数学</p><p>14：00 - 18：00 英语听说、数据库</p><p>19：00 - 23：00 LeetCode Dev-C++ 专业课复习</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;三月学习大纲&quot;&gt;&lt;a href=&quot;#三月学习大纲&quot; class=&quot;headerlink&quot; title=&quot;三月学习大纲&quot;&gt;&lt;/a&gt;三月学习大纲&lt;/h1&gt;&lt;p&gt;8：00 - 12：00 离散数学&lt;/p&gt;
&lt;p&gt;14：00 - 18：00 英语听说、数据库&lt;/p&gt;
&lt;p</summary>
      
    
    
    
    
    <category term="个人" scheme="https://dyson-wang.github.io/SakuraGw_Kotoko/tags/%E4%B8%AA%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>graduate exam</title>
    <link href="https://dyson-wang.github.io/SakuraGw_Kotoko/2022/10/08/graduate%20exam/"/>
    <id>https://dyson-wang.github.io/SakuraGw_Kotoko/2022/10/08/graduate%20exam/</id>
    <published>2022-10-08T00:53:25.000Z</published>
    <updated>2024-01-08T02:17:46.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="graduate-exam"><a href="#graduate-exam" class="headerlink" title="graduate exam"></a>graduate exam</h1><h2 id="十月底强化结束"><a href="#十月底强化结束" class="headerlink" title="十月底强化结束"></a>十月底强化结束</h2><p>英语长难句梳理，单词！！！（五星紧急）3h</p><p>可以开始做真题了，数二 刷！！！</p><p>政治看课，做每章课后题 3h</p><p>李永乐强化视频跟完，108、330、其他题 4h</p><p>17堂课梳理知识点</p><p>408大题+教材 4h</p><h2 id="11-12月卷子真题-政治"><a href="#11-12月卷子真题-政治" class="headerlink" title="11 12月卷子真题+政治"></a>11 12月卷子真题+政治</h2><p>英语直接英一英二80-22真题</p><p>政治肖四肖八+94-22真题</p><p>数学87-22真题+挑几套模拟做做</p><p>408 王道天勤8套模拟，09-22真题</p><p>模拟卷+真题卷</p><h2 id="平板资料"><a href="#平板资料" class="headerlink" title="平板资料"></a>平板资料</h2><p>徐涛课后习题，看答案，看解析视频</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;graduate-exam&quot;&gt;&lt;a href=&quot;#graduate-exam&quot; class=&quot;headerlink&quot; title=&quot;graduate exam&quot;&gt;&lt;/a&gt;graduate exam&lt;/h1&gt;&lt;h2 id=&quot;十月底强化结束&quot;&gt;&lt;a href=&quot;#十月</summary>
      
    
    
    
    
    <category term="个人" scheme="https://dyson-wang.github.io/SakuraGw_Kotoko/tags/%E4%B8%AA%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>rancher monitor api</title>
    <link href="https://dyson-wang.github.io/SakuraGw_Kotoko/2022/09/22/rancher%20monitor%20api/"/>
    <id>https://dyson-wang.github.io/SakuraGw_Kotoko/2022/09/22/rancher%20monitor%20api/</id>
    <published>2022-09-22T08:21:18.000Z</published>
    <updated>2024-01-08T02:17:46.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="rancher-monitor-api"><a href="#rancher-monitor-api" class="headerlink" title="rancher monitor api"></a>rancher monitor api</h1><p>CPU SYSTEM</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">URL/k8s/clusters/$&#123;cluster-id&#125;/api/v1/namespaces/cattle-monitoring-system/services/http:rancher-monitoring-grafana:80/proxy/api/datasources/proxy/1/api/v1/query_range?query=(sum(rate(container_cpu_system_seconds_total&#123;namespace=~&quot;$&#123;namespace-id&#125;&quot;&#125;[240s])) by (pod) OR sum(rate(windows_container_cpu_usage_seconds_kernelmode&#123;namespace=~&quot;$&#123;namespace-id&#125;&quot;&#125;[240s])) by (pod)) * on(pod) kube_pod_info&#123;namespace=~&quot;$&#123;namespace-id&#125;&quot;, created_by_kind=&quot;$&#123;type&#125;&quot;, created_by_name=&quot;$&#123;resource-id&#125;&quot;&#125;&amp;start=$&#123;time-start&#125;&amp;end=$&#123;time-end&#125;&amp;step=$&#123;step&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;rancher-monitor-api&quot;&gt;&lt;a href=&quot;#rancher-monitor-api&quot; class=&quot;headerlink&quot; title=&quot;rancher monitor api&quot;&gt;&lt;/a&gt;rancher monitor api&lt;/h1&gt;&lt;p&gt;CP</summary>
      
    
    
    
    
    <category term="个人" scheme="https://dyson-wang.github.io/SakuraGw_Kotoko/tags/%E4%B8%AA%E4%BA%BA/"/>
    
  </entry>
  
</feed>
